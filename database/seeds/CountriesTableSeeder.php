<?php

use Illuminate\Database\Seeder;
use App\Models\Country;
use App\Models\Currency;

class CountriesTableSeeder extends Seeder {

    /**
     * Run the database seeds.
     *
     * @return void
     */
    public static function insertCurrency($id, $symbol, $short_label, $label) {
        if ($id == null) {
            return null;
        }

        DB::table('currencies')->insert([
            'id' => $id,
            'symbol' => $symbol,
            'short_label' => $short_label,
            'label' => $label
        ]);
    }

    public static function insertCountries($id, $iso2, $iso3, $label, $prefix, $id_currency) {
        if ($id == null) {
            return null;
        }

        DB::table('countries')->insert([
            'id' => $id,
            'iso' => $iso2,
            'iso3' => $iso3,
            'label' => $label,
            'prefix' => $prefix,
            'id_currency' => $id_currency
        ]);
    }

    function run() {
        self::insertCurrency(Currency::AED, '', 'AED', 'UAE Dirham');
        self::insertCurrency(Currency::AFN, '؋', 'AFN', 'Afghani');
        self::insertCurrency(Currency::ALL, 'Lek', 'ALL', 'Lek');
        self::insertCurrency(Currency::AMD, '', 'AMD', 'Armenian Dram');
        self::insertCurrency(Currency::ANG, 'ƒ', 'ANG', 'Netherlands Antillian Guilder');
        self::insertCurrency(Currency::AOA, '', 'AOA', 'Kwanza');
        self::insertCurrency(Currency::ARS, '$', 'ARS', 'Argentine Peso');
        self::insertCurrency(Currency::AUD, '$', 'AUD', 'Australian Dollar');
        self::insertCurrency(Currency::AWG, 'ƒ', 'AWG', 'Aruban Guilder');
        self::insertCurrency(Currency::AZN, 'ман', 'AZN', 'Azerbaijanian Manat');
        self::insertCurrency(Currency::BAM, 'KM', 'BAM', 'Convertible Marks');
        self::insertCurrency(Currency::BBD, '$', 'BBD', 'Barbados Dollar');
        self::insertCurrency(Currency::BDT, '', 'BDT', 'Taka');
        self::insertCurrency(Currency::BGN, 'лв', 'BGN', 'Bulgarian Lev');
        self::insertCurrency(Currency::BHD, '', 'BHD', 'Bahraini Dinar');
        self::insertCurrency(Currency::BIF, '', 'BIF', 'Burundi Franc');
        self::insertCurrency(Currency::BMD, '$', 'BMD', 'Bermudian Dollar (customarily known as Bermuda Dollar)');
        self::insertCurrency(Currency::BND, '$', 'BND', 'Brunei Dollar');
        self::insertCurrency(Currency::BOV, '$b', 'BOV', 'Boliviano Mvdol');
        self::insertCurrency(Currency::BRL, 'R$', 'BRL', 'Brazilian Real');
        self::insertCurrency(Currency::BSD, '$', 'BSD', 'Bahamian Dollar');
        self::insertCurrency(Currency::BWP, 'P', 'BWP', 'Pula');
        self::insertCurrency(Currency::BYR, 'p.', 'BYR', 'Belarussian Ruble');
        self::insertCurrency(Currency::BZD, 'BZ$', 'BZD', 'Belize Dollar');
        self::insertCurrency(Currency::CAD, '$', 'CAD', 'Canadian Dollar');
        self::insertCurrency(Currency::CDF, '', 'CDF', 'Congolese Franc');
        self::insertCurrency(Currency::CHF, 'CHF', 'CHF', 'Swiss Franc');
        self::insertCurrency(Currency::CLF, '$', 'CLF', 'Chilean Peso Unidades de fomento');
        self::insertCurrency(Currency::CNY, '¥', 'CNY', 'Yuan Renminbi');
        self::insertCurrency(Currency::COU, '$', 'COU', 'Colombian Peso Unidad de Valor Real');
        self::insertCurrency(Currency::CRC, '₡', 'CRC', 'Costa Rican Colon');
        self::insertCurrency(Currency::CUC, '₱', 'CUC', 'Cuban Peso Peso Convertible');
        self::insertCurrency(Currency::CVE, '', 'CVE', 'Cape Verde Escudo');
        self::insertCurrency(Currency::CZK, 'Kč', 'CZK', 'Czech Koruna');
        self::insertCurrency(Currency::DJF, '', 'DJF', 'Djibouti Franc');
        self::insertCurrency(Currency::DKK, 'kr', 'DKK', 'Danish Krone');
        self::insertCurrency(Currency::DOP, 'RD$', 'DOP', 'Dominican Peso');
        self::insertCurrency(Currency::DZD, '', 'DZD', 'Algerian Dinar');
        self::insertCurrency(Currency::EEK, '', 'EEK', 'Kroon');
        self::insertCurrency(Currency::EGP, '£', 'EGP', 'Egyptian Pound');
        self::insertCurrency(Currency::ERN, '', 'ERN', 'Nakfa');
        self::insertCurrency(Currency::ETB, '', 'ETB', 'Ethiopian Birr');
        self::insertCurrency(Currency::EUR, '€', 'EUR', 'Euro');
        self::insertCurrency(Currency::FJD, '$', 'FJD', 'Fiji Dollar');
        self::insertCurrency(Currency::FKP, '£', 'FKP', 'Falkland Islands Pound');
        self::insertCurrency(Currency::GBP, '£', 'GBP', 'Pound Sterling');
        self::insertCurrency(Currency::GEL, '', 'GEL', 'Lari');
        self::insertCurrency(Currency::GHS, '', 'GHS', 'Cedi');
        self::insertCurrency(Currency::GIP, '£', 'GIP', 'Gibraltar Pound');
        self::insertCurrency(Currency::GMD, '', 'GMD', 'Dalasi');
        self::insertCurrency(Currency::GNF, '', 'GNF', 'Guinea Franc');
        self::insertCurrency(Currency::GTQ, 'Q', 'GTQ', 'Quetzal');
        self::insertCurrency(Currency::GYD, '$', 'GYD', 'Guyana Dollar');
        self::insertCurrency(Currency::HKD, '$', 'HKD', 'Hong Kong Dollar');
        self::insertCurrency(Currency::HNL, 'L', 'HNL', 'Lempira');
        self::insertCurrency(Currency::HRK, 'kn', 'HRK', 'Croatian Kuna');
        self::insertCurrency(Currency::USD_HTG, '', 'USD', 'Gourde US Dollar');
        self::insertCurrency(Currency::HUF, 'Ft', 'HUF', 'Forint');
        self::insertCurrency(Currency::IDR, 'Rp', 'IDR', 'Rupiah');
        self::insertCurrency(Currency::ILS, '₪', 'ILS', 'New Israeli Sheqel');
        self::insertCurrency(Currency::INR, '', 'INR', 'Indian Rupee');
        self::insertCurrency(Currency::BTN, '', 'BTN', 'Indian Rupee Ngultrum');
        self::insertCurrency(Currency::IQD, '', 'IQD', 'Iraqi Dinar');
        self::insertCurrency(Currency::IRR, '﷼', 'IRR', 'Iranian Rial');
        self::insertCurrency(Currency::ISK, 'kr', 'ISK', 'Iceland Krona');
        self::insertCurrency(Currency::JMD, 'J$', 'JMD', 'Jamaican Dollar');
        self::insertCurrency(Currency::JOD, '', 'JOD', 'Jordanian Dinar');
        self::insertCurrency(Currency::JPY, '¥', 'JPY', 'Yen');
        self::insertCurrency(Currency::KES, '', 'KES', 'Kenyan Shilling');
        self::insertCurrency(Currency::KGS, 'лв', 'KGS', 'Som');
        self::insertCurrency(Currency::KHR, '៛', 'KHR', 'Riel');
        self::insertCurrency(Currency::KMF, '', 'KMF', 'Comoro Franc');
        self::insertCurrency(Currency::KPW, '₩', 'KPW', 'North Korean Won');
        self::insertCurrency(Currency::KRW, '₩', 'KRW', 'Won');
        self::insertCurrency(Currency::KWD, '', 'KWD', 'Kuwaiti Dinar');
        self::insertCurrency(Currency::KYD, '$', 'KYD', 'Cayman Islands Dollar');
        self::insertCurrency(Currency::KZT, 'лв', 'KZT', 'Tenge');
        self::insertCurrency(Currency::LAK, '₭', 'LAK', 'Kip');
        self::insertCurrency(Currency::LBP, '£', 'LBP', 'Lebanese Pound');
        self::insertCurrency(Currency::LKR, '₨', 'LKR', 'Sri Lanka Rupee');
        self::insertCurrency(Currency::LRD, '$', 'LRD', 'Liberian Dollar');
        self::insertCurrency(Currency::LTL, 'Lt', 'LTL', 'Lithuanian Litas');
        self::insertCurrency(Currency::LVL, 'Ls', 'LVL', 'Latvian Lats');
        self::insertCurrency(Currency::LYD, '', 'LYD', 'Libyan Dinar');
        self::insertCurrency(Currency::MAD, '', 'MAD', 'Moroccan Dirham');
        self::insertCurrency(Currency::MDL, '', 'MDL', 'Moldovan Leu');
        self::insertCurrency(Currency::MGA, '', 'MGA', 'Malagasy Ariary');
        self::insertCurrency(Currency::MKD, 'ден', 'MKD', 'Denar');
        self::insertCurrency(Currency::MMK, '', 'MMK', 'Kyat');
        self::insertCurrency(Currency::MNT, '₮', 'MNT', 'Tugrik');
        self::insertCurrency(Currency::MOP, '', 'MOP', 'Pataca');
        self::insertCurrency(Currency::MRO, '', 'MRO', 'Ouguiya');
        self::insertCurrency(Currency::MUR, '₨', 'MUR', 'Mauritius Rupee');
        self::insertCurrency(Currency::MVR, '', 'MVR', 'Rufiyaa');
        self::insertCurrency(Currency::MWK, '', 'MWK', 'Kwacha');
        self::insertCurrency(Currency::MXV, '$', 'MXV', 'Mexican Peso Mexican Unidad de Inversion (UDI)');
        self::insertCurrency(Currency::MYR, 'RM', 'MYR', 'Malaysian Ringgit');
        self::insertCurrency(Currency::MZN, 'MT', 'MZN', 'Metical');
        self::insertCurrency(Currency::NGN, '₦', 'NGN', 'Naira');
        self::insertCurrency(Currency::NIO, 'C$', 'NIO', 'Cordoba Oro');
        self::insertCurrency(Currency::NOK, 'kr', 'NOK', 'Norwegian Krone');
        self::insertCurrency(Currency::NPR, '₨', 'NPR', 'Nepalese Rupee');
        self::insertCurrency(Currency::NZD, '$', 'NZD', 'New Zealand Dollar');
        self::insertCurrency(Currency::OMR, '﷼', 'OMR', 'Rial Omani');
        self::insertCurrency(Currency::USD_PAB, 'B/.', 'USD', 'Balboa US Dollar');
        self::insertCurrency(Currency::PEN, 'S/.', 'PEN', 'Nuevo Sol');
        self::insertCurrency(Currency::PGK, '', 'PGK', 'Kina');
        self::insertCurrency(Currency::PHP, 'Php', 'PHP', 'Philippine Peso');
        self::insertCurrency(Currency::PKR, '₨', 'PKR', 'Pakistan Rupee');
        self::insertCurrency(Currency::PLN, 'zł', 'PLN', 'Zloty');
        self::insertCurrency(Currency::PYG, 'Gs', 'PYG', 'Guarani');
        self::insertCurrency(Currency::QAR, '﷼', 'QAR', 'Qatari Rial');
        self::insertCurrency(Currency::RON, 'lei', 'RON', 'New Leu');
        self::insertCurrency(Currency::RSD, 'Дин.', 'RSD', 'Serbian Dinar');
        self::insertCurrency(Currency::RUB, 'руб', 'RUB', 'Russian Ruble');
        self::insertCurrency(Currency::RWF, '', 'RWF', 'Rwanda Franc');
        self::insertCurrency(Currency::SAR, '﷼', 'SAR', 'Saudi Riyal');
        self::insertCurrency(Currency::SBD, '$', 'SBD', 'Solomon Islands Dollar');
        self::insertCurrency(Currency::SCR, '₨', 'SCR', 'Seychelles Rupee');
        self::insertCurrency(Currency::SDG, '', 'SDG', 'Sudanese Pound');
        self::insertCurrency(Currency::SEK, 'kr', 'SEK', 'Swedish Krona');
        self::insertCurrency(Currency::SGD, '$', 'SGD', 'Singapore Dollar');
        self::insertCurrency(Currency::SHP, '£', 'SHP', 'Saint Helena Pound');
        self::insertCurrency(Currency::SLL, '', 'SLL', 'Leone');
        self::insertCurrency(Currency::SOS, 'S', 'SOS', 'Somali Shilling');
        self::insertCurrency(Currency::SRD, '$', 'SRD', 'Surinam Dollar');
        self::insertCurrency(Currency::STD, '', 'STD', 'Dobra');
        self::insertCurrency(Currency::USD_SVC, '$', 'USD', 'El Salvador Colon US Dollar');
        self::insertCurrency(Currency::SYP, '£', 'SYP', 'Syrian Pound');
        self::insertCurrency(Currency::SZL, '', 'SZL', 'Lilangeni');
        self::insertCurrency(Currency::THB, '฿', 'THB', 'Baht');
        self::insertCurrency(Currency::TJS, '', 'TJS', 'Somoni');
        self::insertCurrency(Currency::TMT, '', 'TMT', 'Manat');
        self::insertCurrency(Currency::TND, '', 'TND', 'Tunisian Dinar');
        self::insertCurrency(Currency::TOP, '', 'TOP', 'Pa\'anga');
        self::insertCurrency(Currency::TRYL, 'TL', 'TRY', 'Turkish Lira');
        self::insertCurrency(Currency::TTD, 'TT$', 'TTD', 'Trinidad and Tobago Dollar');
        self::insertCurrency(Currency::TWD, 'NT$', 'TWD', 'New Taiwan Dollar');
        self::insertCurrency(Currency::TZS, '', 'TZS', 'Tanzanian Shilling');
        self::insertCurrency(Currency::UAH, '₴', 'UAH', 'Hryvnia');
        self::insertCurrency(Currency::UGX, '', 'UGX', 'Uganda Shilling');
        self::insertCurrency(Currency::USD, '$', 'USD', 'US Dollar');
        self::insertCurrency(Currency::UYI, '$U', 'UYI', 'Peso Uruguayo Uruguay Peso en Unidades Indexadas');
        self::insertCurrency(Currency::UZS, 'лв', 'UZS', 'Uzbekistan Sum');
        self::insertCurrency(Currency::VEF, 'Bs', 'VEF', 'Bolivar Fuerte');
        self::insertCurrency(Currency::VND, '₫', 'VND', 'Dong');
        self::insertCurrency(Currency::VUV, '', 'VUV', 'Vatu');
        self::insertCurrency(Currency::WST, '', 'WST', 'Tala');
        self::insertCurrency(Currency::XAF, '', 'XAF', 'CFA Franc BEAC');
        self::insertCurrency(Currency::XAG, '', 'XAG', 'Silver');
        self::insertCurrency(Currency::XAU, '', 'XAU', 'Gold');
        self::insertCurrency(Currency::XBA, '', 'XBA', 'Bond Markets Units European Composite Unit (EURCO)');
        self::insertCurrency(Currency::XBB, '', 'XBB', 'European Monetary Unit (E.M.U.-6)');
        self::insertCurrency(Currency::XBC, '', 'XBC', 'European Unit of Account 9(E.U.A.-9)');
        self::insertCurrency(Currency::XBD, '', 'XBD', 'European Unit of Account 17(E.U.A.-17)');
        self::insertCurrency(Currency::XCD, '$', 'XCD', 'East Caribbean Dollar');
        self::insertCurrency(Currency::XDR, '', 'XDR', 'SDR');
        self::insertCurrency(Currency::XFU, '', 'XFU', 'UIC-Franc');
        self::insertCurrency(Currency::XOF, '', 'XOF', 'CFA Franc BCEAO');
        self::insertCurrency(Currency::XPD, '', 'XPD', 'Palladium');
        self::insertCurrency(Currency::XPF, '', 'XPF', 'CFP Franc');
        self::insertCurrency(Currency::XPT, '', 'XPT', 'Platinum');
        self::insertCurrency(Currency::XTS, '', 'XTS', 'Codes specifically reserved for testing purposes');
        self::insertCurrency(Currency::YER, '﷼', 'YER', 'Yemeni Rial');
        self::insertCurrency(Currency::ZAR, 'R', 'ZAR', 'Rand');
        self::insertCurrency(Currency::LSL, '', 'LSL', 'Rand Loti');
        self::insertCurrency(Currency::NAD, '', 'NAD', 'Rand Namibia Dollar');
        self::insertCurrency(Currency::ZMK, '', 'ZMK', 'Zambian Kwacha');
        self::insertCurrency(Currency::ZWL, '', 'ZWL', 'Zimbabwe Dollar');
        
        self::insertCountries(Country::AFG, 'AF', 'AFG', 'Afghanistan', 93, Currency::AFN);
        self::insertCountries(Country::ALB, 'AL', 'ALB', 'Albania', 355, Currency::ALL);
        self::insertCountries(Country::DZA, 'DZ', 'DZA', 'Algeria', 213, Currency::DZD);
        self::insertCountries(Country::ANDO, 'AD', 'AND', 'Andorra', 376, Currency::ANG);
        self::insertCountries(Country::AGO, 'AO', 'AGO', 'Angola', 244, Currency::AOA);
        self::insertCountries(Country::ATG, 'AG', 'ATG', 'Antigua and Barbuda', -267, 0);
        self::insertCountries(Country::ARG, 'AR', 'ARG', 'Argentina', 54, 0);
        self::insertCountries(Country::ARM, 'AM', 'ARM', 'Armenia', 374, 0);
        self::insertCountries(Country::AUT, 'AT', 'AUT', 'Austria', 43, 0);
        self::insertCountries(Country::BHS, 'BS', 'BHS', 'Bahamas, The', -241, 0);
        self::insertCountries(Country::BHR, 'BH', 'BHR', 'Bahrain', 973, 0);
        self::insertCountries(Country::BGD, 'BD', 'BGD', 'Bangladesh', 880, 0);
        self::insertCountries(Country::BRB, 'BB', 'BRB', 'Barbados', -245, 0);
        self::insertCountries(Country::BLR, 'BY', 'BLR', 'Belarus', 375, 0);
        self::insertCountries(Country::BEL, 'BE', 'BEL', 'Belgium', 32, 0);
        self::insertCountries(Country::BLZ, 'BZ', 'BLZ', 'Belize', 501, 0);
        self::insertCountries(Country::BEN, 'BJ', 'BEN', 'Benin', 229, 0);
        self::insertCountries(Country::BTN, 'BT', 'BTN', 'Bhutan', 975, 0);
        self::insertCountries(Country::BOL, 'BO', 'BOL', 'Bolivia', 591, 0);
        self::insertCountries(Country::BIH, 'BA', 'BIH', 'Bosnia and Herzegovina', 387, 0);
        self::insertCountries(Country::BWA, 'BW', 'BWA', 'Botswana', 267, 0);
        self::insertCountries(Country::BRA, 'BR', 'BRA', 'Brazil', 55, 0);
        self::insertCountries(Country::BRN, 'BN', 'BRN', 'Brunei', 673, 0);
        self::insertCountries(Country::BGR, 'BG', 'BGR', 'Bulgaria', 359, 0);
        self::insertCountries(Country::BFA, 'BF', 'BFA', 'Burkina Faso', 226, 0);
        self::insertCountries(Country::BDI, 'BI', 'BDI', 'Burundi', 257, 0);
        self::insertCountries(Country::KHM, 'KH', 'KHM', 'Cambodia', 855, 0);
        self::insertCountries(Country::CMR, 'CM', 'CMR', 'Cameroon', 237, 0);
        self::insertCountries(Country::CAN, 'CA', 'CAN', 'Canada', 1, 0);
        self::insertCountries(Country::CPV, 'CV', 'CPV', 'Cape Verde', 238, 0);
        self::insertCountries(Country::CAF, 'CF', 'CAF', 'Central African Republic', 236, 0);
        self::insertCountries(Country::TCD, 'TD', 'TCD', 'Chad', 235, 0);
        self::insertCountries(Country::CHL, 'CL', 'CHL', 'Chile', 56, 0);
        self::insertCountries(Country::CHN, 'CN', 'CHN', 'China', 86, 0);
        self::insertCountries(Country::COL, 'CO', 'COL', 'Colombia', 57, 0);
        self::insertCountries(Country::COM, 'KM', 'COM', 'Comoros', 269, 0);
        self::insertCountries(Country::COD, 'CD', 'COD', 'Congo, (Congo Â– Kinshasa)', 243, 0);
        self::insertCountries(Country::COG, 'CG', 'COG', 'Congo, (Congo Â– Brazzaville)', 242, 0);
        self::insertCountries(Country::CRI, 'CR', 'CRI', 'Costa Rica', 506, 0);
        self::insertCountries(Country::CIV, 'CI', 'CIV', 'Ivory Coast', 225, 0);
        self::insertCountries(Country::HRV, 'HR', 'HRV', 'Croatia', 385, 0);
        self::insertCountries(Country::CUB, 'CU', 'CUB', 'Cuba', 53, 0);
        self::insertCountries(Country::CYP_C, 'CY', 'CYP', 'Cyprus', 357, 0);
        self::insertCountries(Country::CZE, 'CZ', 'CZE', 'Czech Republic', 420, 0);
        self::insertCountries(Country::DNK, 'DK', 'DNK', 'Denmark', 45, 0);
        self::insertCountries(Country::DJI, 'DJ', 'DJI', 'Djibouti', 253, 0);
        self::insertCountries(Country::DMA, 'DM', 'DMA', 'Dominica', -766, 0);
        self::insertCountries(Country::DOM, 'DO', 'DOM', 'Dominican Republic', +1 - 809, 0);
        self::insertCountries(Country::ECU, 'EC', 'ECU', 'Ecuador', 593, 0);
        self::insertCountries(Country::EGY, 'EG', 'EGY', 'Egypt', 20, 0);
        self::insertCountries(Country::SLV, 'SV', 'SLV', 'El Salvador', 503, 0);
        self::insertCountries(Country::GNQ, 'GQ', 'GNQ', 'Equatorial Guinea', 240, 0);
        self::insertCountries(Country::ERI, 'ER', 'ERI', 'Eritrea', 291, 0);
        self::insertCountries(Country::EST, 'EE', 'EST', 'Estonia', 372, 0);
        self::insertCountries(Country::ETH, 'ET', 'ETH', 'Ethiopia', 251, 0);
        self::insertCountries(Country::FJI, 'FJ', 'FJI', 'Fiji', 679, 0);
        self::insertCountries(Country::FIN, 'FI', 'FIN', 'Finland', 358, 0);
        self::insertCountries(Country::FRA, 'FR', 'FRA', 'France', 33, 0);
        self::insertCountries(Country::GAB, 'GA', 'GAB', 'Gabon', 241, 0);
        self::insertCountries(Country::GMB, 'GM', 'GMB', 'Gambia, The', 220, 0);
        self::insertCountries(Country::DEU, 'DE', 'DEU', 'Germany', 49, 0);
        self::insertCountries(Country::GHA, 'GH', 'GHA', 'Ghana', 233, 0);
        self::insertCountries(Country::GRC, 'GR', 'GRC', 'Greece', 30, 0);
        self::insertCountries(Country::GRD, 'GD', 'GRD', 'Grenada', -472, 0);
        self::insertCountries(Country::GTM, 'GT', 'GTM', 'Guatemala', 502, 0);
        self::insertCountries(Country::GIN, 'GN', 'GIN', 'Guinea', 224, 0);
        self::insertCountries(Country::GNB, 'GW', 'GNB', 'Guinea-Bissau', 245, 0);
        self::insertCountries(Country::GUY, 'GY', 'GUY', 'Guyana', 592, 0);
        self::insertCountries(Country::HTI, 'HT', 'HTI', 'Haiti', 509, 0);
        self::insertCountries(Country::HND, 'HN', 'HND', 'Honduras', 504, 0);
        self::insertCountries(Country::HUN, 'HU', 'HUN', 'Hungary', 36, 0);
        self::insertCountries(Country::ISL, 'IS', 'ISL', 'Iceland', 354, 0);
        self::insertCountries(Country::IND, 'IN', 'IND', 'India', 91, 0);
        self::insertCountries(Country::IDN, 'ID', 'IDN', 'Indonesia', 62, 0);
        self::insertCountries(Country::IRN, 'IR', 'IRN', 'Iran', 98, 0);
        self::insertCountries(Country::IRQ, 'IQ', 'IRQ', 'Iraq', 964, 0);
        self::insertCountries(Country::IRL, 'IE', 'IRL', 'Ireland', 353, 0);
        self::insertCountries(Country::ISR, 'IL', 'ISR', 'Israel', 972, 0);
        self::insertCountries(Country::ITA, 'IT', 'ITA', 'Italy', 39, 0);
        self::insertCountries(Country::JAM, 'JM', 'JAM', 'Jamaica', -875, 0);
        self::insertCountries(Country::JPN, 'JP', 'JPN', 'Japan', 81, 0);
        self::insertCountries(Country::JOR, 'JO', 'JOR', 'Jordan', 962, 0);
        self::insertCountries(Country::KAZ, 'KZ', 'KAZ', 'Kazakhstan', 7, 0);
        self::insertCountries(Country::KEN, 'KE', 'KEN', 'Kenya', 254, 0);
        self::insertCountries(Country::KIR, 'KI', 'KIR', 'Kiribati', 686, 0);
        self::insertCountries(Country::PRK, 'KP', 'PRK', 'Korea, North', 850, 0);
        self::insertCountries(Country::KOR, 'KR', 'KOR', 'Korea, South', 82, 0);
        self::insertCountries(Country::KWT, 'KW', 'KWT', 'Kuwait', 965, 0);
        self::insertCountries(Country::KGZ, 'KG', 'KGZ', 'Kyrgyzstan', 996, 0);
        self::insertCountries(Country::LAO, 'LA', 'LAO', 'Laos', 856, 0);
        self::insertCountries(Country::LVA, 'LV', 'LVA', 'Latvia', 371, 0);
        self::insertCountries(Country::LBN, 'LB', 'LBN', 'Lebanon', 961, 0);
        self::insertCountries(Country::LSO, 'LS', 'LSO', 'Lesotho', 266, 0);
        self::insertCountries(Country::LBR, 'LR', 'LBR', 'Liberia', 231, 0);
        self::insertCountries(Country::LBY, 'LY', 'LBY', 'Libya', 218, 0);
        self::insertCountries(Country::LIE, 'LI', 'LIE', 'Liechtenstein', 423, 0);
        self::insertCountries(Country::LTU, 'LT', 'LTU', 'Lithuania', 370, 0);
        self::insertCountries(Country::LUX, 'LU', 'LUX', 'Luxembourg', 352, 0);
        self::insertCountries(Country::MKD, 'MK', 'MKD', 'Macedonia', 389, 0);
        self::insertCountries(Country::MDG, 'MG', 'MDG', 'Madagascar', 261, 0);
        self::insertCountries(Country::MWI, 'MW', 'MWI', 'Malawi', 265, 0);
        self::insertCountries(Country::MYS, 'MY', 'MYS', 'Malaysia', 60, 0);
        self::insertCountries(Country::MDV, 'MV', 'MDV', 'Maldives', 960, 0);
        self::insertCountries(Country::MLI, 'ML', 'MLI', 'Mali', 223, 0);
        self::insertCountries(Country::MLT, 'MT', 'MLT', 'Malta', 356, 0);
        self::insertCountries(Country::MHL, 'MH', 'MHL', 'Marshall Islands', 692, 0);
        self::insertCountries(Country::MRT, 'MR', 'MRT', 'Mauritania', 222, 0);
        self::insertCountries(Country::MUS, 'MU', 'MUS', 'Mauritius', 230, 0);
        self::insertCountries(Country::MEX, 'MX', 'MEX', 'Mexico', 52, 0);
        self::insertCountries(Country::FSM, 'FM', 'FSM', 'Micronesia', 691, 0);
        self::insertCountries(Country::MDA_M, 'MD', 'MDA', 'Moldova', 373, 0);
        self::insertCountries(Country::MCO, 'MC', 'MCO', 'Monaco', 377, 0);
        self::insertCountries(Country::MNG, 'MN', 'MNG', 'Mongolia', 976, 0);
        self::insertCountries(Country::MNE, 'ME', 'MNE', 'Montenegro', 382, 0);
        self::insertCountries(Country::MAR, 'MA', 'MAR', 'Morocco', 212, 0);
        self::insertCountries(Country::MOZ, 'MZ', 'MOZ', 'Mozambique', 258, 0);
        self::insertCountries(Country::MMR, 'MM', 'MMR', 'Myanmar (Burma)', 95, 0);
        self::insertCountries(Country::NAM, 'NA', 'NAM', 'Namibia', 264, 0);
        self::insertCountries(Country::NRU, 'NR', 'NRU', 'Nauru', 674, 0);
        self::insertCountries(Country::NPL, 'NP', 'NPL', 'Nepal', 977, 0);
        self::insertCountries(Country::NLD, 'NL', 'NLD', 'Netherlands', 31, 0);
        self::insertCountries(Country::NZL, 'NZ', 'NZL', 'New Zealand', 64, 0);
        self::insertCountries(Country::NIC, 'NI', 'NIC', 'Nicaragua', 505, 0);
        self::insertCountries(Country::NER, 'NE', 'NER', 'Niger', 227, 0);
        self::insertCountries(Country::NGA, 'NG', 'NGA', 'Nigeria', 234, 0);
        self::insertCountries(Country::NOR, 'NO', 'NOR', 'Norway', 47, 0);
        self::insertCountries(Country::OMN, 'OM', 'OMN', 'Oman', 968, 0);
        self::insertCountries(Country::PAK, 'PK', 'PAK', 'Pakistan', 92, 0);
        self::insertCountries(Country::PLW, 'PW', 'PLW', 'Palau', 680, 0);
        self::insertCountries(Country::PAN, 'PA', 'PAN', 'Panama', 507, 0);
        self::insertCountries(Country::PNG, 'PG', 'PNG', 'Papua New Guinea', 675, 0);
        self::insertCountries(Country::PRY, 'PY', 'PRY', 'Paraguay', 595, 0);
        self::insertCountries(Country::PER, 'PE', 'PER', 'Peru', 51, 0);
        self::insertCountries(Country::PHL, 'PH', 'PHL', 'Philippines', 63, 0);
        self::insertCountries(Country::POL, 'PL', 'POL', 'Poland', 48, 0);
        self::insertCountries(Country::PRT, 'PT', 'PRT', 'Portugal', 351, 0);
        self::insertCountries(Country::QAT, 'QA', 'QAT', 'Qatar', 974, 0);
        self::insertCountries(Country::ROU, 'RO', 'ROU', 'Romania', 40, 0);
        self::insertCountries(Country::RUS, 'RU', 'RUS', 'Russia', 7, 0);
        self::insertCountries(Country::RWA, 'RW', 'RWA', 'Rwanda', 250, 0);
        self::insertCountries(Country::KNA, 'KN', 'KNA', 'Saint Kitts and Nevis', -868, 0);
        self::insertCountries(Country::LCA, 'LC', 'LCA', 'Saint Lucia', -757, 0);
        self::insertCountries(Country::VCT, 'VC', 'VCT', 'Saint Vincent and the Grenadines', -783, 0);
        self::insertCountries(Country::WSM, 'WS', 'WSM', 'Samoa', 685, 0);
        self::insertCountries(Country::SMR, 'SM', 'SMR', 'San Marino', 378, 0);
        self::insertCountries(Country::STP, 'ST', 'STP', 'Sao Tome and Principe', 239, 0);
        self::insertCountries(Country::SAU, 'SA', 'SAU', 'Saudi Arabia', 966, 0);
        self::insertCountries(Country::SEN, 'SN', 'SEN', 'Senegal', 221, 0);
        self::insertCountries(Country::SRB, 'RS', 'SRB', 'Serbia', 381, 0);
        self::insertCountries(Country::SYC, 'SC', 'SYC', 'Seychelles', 248, 0);
        self::insertCountries(Country::SLE, 'SL', 'SLE', 'Sierra Leone', 232, 0);
        self::insertCountries(Country::SGP, 'SG', 'SGP', 'Singapore', 65, 0);
        self::insertCountries(Country::SVK, 'SK', 'SVK', 'Slovakia', 421, 0);
        self::insertCountries(Country::SVN, 'SI', 'SVN', 'Slovenia', 386, 0);
        self::insertCountries(Country::SLB, 'SB', 'SLB', 'Solomon Islands', 677, 0);
        self::insertCountries(Country::ZAF, 'ZA', 'ZAF', 'South Africa', 27, 0);
        self::insertCountries(Country::ESP, 'ES', 'ESP', 'Spain', 34, 0);
        self::insertCountries(Country::LKA, 'LK', 'LKA', 'Sri Lanka', 94, 0);
        self::insertCountries(Country::SDN, 'AL', 'SDN', 'Sudan', 249, 0);
        self::insertCountries(Country::SUR, 'SR', 'SUR', 'Suriname', 597, 0);
        self::insertCountries(Country::SWZ, 'SZ', 'SWZ', 'Swaziland', 268, 0);
        self::insertCountries(Country::SWE, 'SE', 'SWE', 'Sweden', 46, 0);
        self::insertCountries(Country::CHE, 'CH', 'CHE', 'Switzerland', 41, 0);
        self::insertCountries(Country::SYR, 'SY', 'SYR', 'Syria', 963, 0);
        self::insertCountries(Country::TJK, 'TJ', 'TJK', 'Tajikistan', 992, 0);
        self::insertCountries(Country::TZA, 'TZ', 'TZA', 'Tanzania', 255, 0);
        self::insertCountries(Country::THA, 'TH', 'THA', 'Thailand', 66, 0);
        self::insertCountries(Country::TLS, 'TL', 'TLS', 'Timor-Leste (East Timor)', 670, 0);
        self::insertCountries(Country::TGO, 'TG', 'TGO', 'Togo', 228, 0);
        self::insertCountries(Country::TON, 'TO', 'TON', 'Tonga', 676, 0);
        self::insertCountries(Country::TTO, 'TT', 'TTO', 'Trinidad and Tobago', -867, 0);
        self::insertCountries(Country::TUN, 'TN', 'TUN', 'Tunisia', 216, 0);
        self::insertCountries(Country::TUR, 'TR', 'TUR', 'Turkey', 90, 0);
        self::insertCountries(Country::TKM, 'TM', 'TKM', 'Turkmenistan', 993, 0);
        self::insertCountries(Country::TUV, 'TV', 'TUV', 'Tuvalu', 688, 0);
        self::insertCountries(Country::UGA, 'UG', 'UGA', 'Uganda', 256, 0);
        self::insertCountries(Country::UKR, 'UA', 'UKR', 'Ukraine', 380, 0);
        self::insertCountries(Country::ARE, 'AE', 'ARE', 'United Arab Emirates', 971, 0);
        self::insertCountries(Country::GBR, 'GB', 'GBR', 'United Kingdom', 44, 0);
        self::insertCountries(Country::USA, 'US', 'USA', 'United States', 1, 0);
        self::insertCountries(Country::URY, 'UY', 'URY', 'Uruguay', 598, 0);
        self::insertCountries(Country::UZB, 'UZ', 'UZB', 'Uzbekistan', 998, 0);
        self::insertCountries(Country::VUT, 'VU', 'VUT', 'Vanuatu', 678, 0);
        self::insertCountries(Country::VAT, 'VA', 'VAT', 'Vatican City', 379, 0);
        self::insertCountries(Country::VEN, 'VE', 'VEN', 'Venezuela', 58, 0);
        self::insertCountries(Country::VNM, 'VN', 'VNM', 'Vietnam', 84, 0);
        self::insertCountries(Country::YEM, 'YE', 'YEM', 'Yemen', 967, 0);
        self::insertCountries(Country::ZMB, 'ZM', 'ZMB', 'Zambia', 260, 0);
        self::insertCountries(Country::ZWE, 'ZW', 'ZWE', 'Zimbabwe', 263, 0);
        self::insertCountries(Country::GEO_A, 'GE', 'GEO', 'Abkhazia', 995, 0);
        self::insertCountries(Country::GEO_SO, 'GE', 'GEO', 'South Ossetia', 995, 0);
        self::insertCountries(Country::GEO_G, 'GE', 'GEO', 'Georgia', 995, 0);
        self::insertCountries(Country::TWN, 'TW', 'TWN', 'China, Republic of (Taiwan)', 886, 0);
        self::insertCountries(Country::AZE_NK, 'AZ', 'AZE', 'Nagorno-Karabakh', 277, 0);
        self::insertCountries(Country::AZE_A, 'AZ', 'AZE', 'Azerbaijan', 994, 0);
        self::insertCountries(Country::CYP_NC, 'CY', 'CYP', 'Northern Cyprus', -302, 0);
        self::insertCountries(Country::MDA_PT, 'MD', 'MDA', 'Pridnestrovie (Transnistria)', -160, 0);
        self::insertCountries(Country::SOM_L, 'SO', 'SOM', 'Somaliland', 252, 0);
        self::insertCountries(Country::SOM_S, 'SO', 'SOM', 'Somalia', 252, 0);
        self::insertCountries(Country::AUS_ACI, 'AU', 'AUS', 'Ashmore and Cartier Islands', 61, 0);
        self::insertCountries(Country::AUS_A, 'AU', 'AUS', 'Australia', 61, 0);
        self::insertCountries(Country::AUS_CSI, 'AU', 'AUS', 'Coral Sea Islands', 61, 0);
        self::insertCountries(Country::CXR, 'CX', 'CXR', 'Christmas Island', 61, 0);
        self::insertCountries(Country::CCK, 'CC', 'CCK', 'Cocos (Keeling) Islands', 61, 0);
        self::insertCountries(Country::HMD, 'HM', 'HMD', 'Heard Island and McDonald Islands', +0, 0);
        self::insertCountries(Country::NFK, 'NF', 'NFK', 'Norfolk Island', 672, 0);
        self::insertCountries(Country::NCL, 'NC', 'NCL', 'New Caledonia', 687, 0);
        self::insertCountries(Country::PYF_FP, 'PF', 'PYF', 'French Polynesia', 689, 0);
        self::insertCountries(Country::PYF_CI, 'PF', 'PYF', 'Clipperton Island', 689, 0);
        self::insertCountries(Country::MYT, 'YT', 'MYT', 'Mayotte', 262, 0);
        self::insertCountries(Country::GLP_SB, 'GP', 'GLP', 'Saint Barthelemy', 590, 0);
        self::insertCountries(Country::GLP_SM, 'GP', 'GLP', 'Saint Martin', 590, 0);
        self::insertCountries(Country::SPM, 'PM', 'SPM', 'Saint Pierre and Miquelon', 508, 0);
        self::insertCountries(Country::WLF, 'WF', 'WLF', 'Wallis and Futuna', 681, 0);
        self::insertCountries(Country::ATF, 'TF', 'ATF', 'French Southern and Antarctic Lands', 33, 0);
        self::insertCountries(Country::BVT, 'BV', 'BVT', 'Bouvet Island', 55, 0);
        self::insertCountries(Country::COK, 'CK', 'COK', 'Cook Islands', 682, 0);
        self::insertCountries(Country::NIU, 'NU', 'NIU', 'Niue', 683, 0);
        self::insertCountries(Country::TKL, 'TK', 'TKL', 'Tokelau', 690, 0);
        self::insertCountries(Country::GGY, 'GG', 'GGY', 'Guernsey', 44, 0);
        self::insertCountries(Country::IMN, 'IM', 'IMN', 'Isle of Man', 44, 0);
        self::insertCountries(Country::JEY, 'JE', 'JEY', 'Jersey', 44, 0);
        self::insertCountries(Country::AIA, 'AI', 'AIA', 'Anguilla', -263, 0);
        self::insertCountries(Country::BMU, 'BM', 'BMU', 'Bermuda', -440, 0);
        self::insertCountries(Country::IOT, 'IO', 'IOT', 'British Indian Ocean Territory', 246, 0);
        self::insertCountries(Country::VGB, 'VG', 'VGB', 'British Virgin Islands', -283, 0);
        self::insertCountries(Country::CYM, 'KY', 'CYM', 'Cayman Islands', -344, 0);
        self::insertCountries(Country::FLK, 'FK', 'FLK', 'Falkland Islands (Islas Malvinas)', 500, 0);
        self::insertCountries(Country::GIB, 'GI', 'GIB', 'Gibraltar', 350, 0);
        self::insertCountries(Country::MSR, 'MS', 'MSR', 'Montserrat', -663, 0);
        self::insertCountries(Country::PCN, 'PN', 'PCN', 'Pitcairn Islands', 64, 0);
        self::insertCountries(Country::SHN, 'SH', 'SHN', 'Saint Helena', 290, 0);
        self::insertCountries(Country::SGS, 'GS', 'SGS', 'South Georgia & South Sandwich Islands', 500, 0);
        self::insertCountries(Country::TCA, 'TC', 'TCA', 'Turks and Caicos Islands', -648, 0);
        self::insertCountries(Country::MNP, 'MP', 'MNP', 'Northern Mariana Islands', -669, 0);
        self::insertCountries(Country::PRI, 'PR', 'PRI', 'Puerto Rico', +1 - 787 and 1 - 939, 0);
        self::insertCountries(Country::ASM, 'AS', 'ASM', 'American Samoa', -683, 0);
        self::insertCountries(Country::UMI_BI, 'UM', 'UMI', 'Baker Island', 699, 0);
        self::insertCountries(Country::GUM, 'GU', 'GUM', 'Guam', -670, 0);
        self::insertCountries(Country::UMI_HI, 'UM', 'UMI', 'Howland Island', 699, 0);
        self::insertCountries(Country::UMI_JI, 'UM', 'UMI', 'Jarvis Island', 699, 0);
        self::insertCountries(Country::UMI_JA, 'UM', 'UMI', 'Johnston Atoll', 699, 0);
        self::insertCountries(Country::UMI_KR, 'UM', 'UMI', 'Kingman Reef', 699, 0);
        self::insertCountries(Country::UMI_MI, 'UM', 'UMI', 'Midway Islands', 699, 0);
        self::insertCountries(Country::UMI_NI, 'UM', 'UMI', 'Navassa Island', 699, 0);
        self::insertCountries(Country::UMI_PA, 'UM', 'UMI', 'Palmyra Atoll', 699, 0);
        self::insertCountries(Country::UMI_WI, 'UM', 'UMI', 'Wake Island', 699, 0);
        self::insertCountries(Country::VIR, 'VI', 'VIR', 'U.S. Virgin Islands', -339, 0);
        self::insertCountries(Country::HKG, 'HK', 'HKG', 'Hong Kong', 852, 0);
        self::insertCountries(Country::MAC, 'MO', 'MAC', 'Macau', 853, 0);
        self::insertCountries(Country::FRO, 'FO', 'FRO', 'Faroe Islands', 298, 0);
        self::insertCountries(Country::GRL, 'GL', 'GRL', 'Greenland', 299, 0);
        self::insertCountries(Country::GUF, 'GF', 'GUF', 'French Guiana', 594, 0);
        self::insertCountries(Country::GLP_G, 'GP', 'GLP', 'Guadeloupe', 590, 0);
        self::insertCountries(Country::MTQ, 'MQ', 'MTQ', 'Martinique', 596, 0);
        self::insertCountries(Country::REU, 'RE', 'REU', 'Reunion', 262, 0);
        self::insertCountries(Country::ALA, 'AX', 'ALA', 'Aland', 340, 0);
        self::insertCountries(Country::ABW, 'AW', 'ABW', 'Aruba', 297, 0);
        self::insertCountries(Country::ANT, 'AN', 'ANT', 'Netherlands Antilles', 599, 0);
        self::insertCountries(Country::SJM, 'SJ', 'SJM', 'Svalbard', 47, 0);
        self::insertCountries(Country::ASC, 'AC', 'ASC', 'Ascension', 247, 0);
        self::insertCountries(Country::TAA, 'TA', 'TAA', 'Tristan da Cunha', 290, 0);
    }

}
