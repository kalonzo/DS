<?php

use Illuminate\Database\Seeder;
use App\Models\Country;
use App\Models\Currency;

class CountriesTableSeeder extends Seeder {

    /**
     * Run the database seeds.
     *
     * @return void
     */
    public static function insertCurrency($id, $symbol, $short_label, $label) {
        if ($id == null) {
            return null;
        }

        DB::table('currencies')->insert([
            'id' => $id,
            'symbol' => $symbol,
            'short_label' => $short_label,
            'label' => $label
        ]);
    }

    public static function insertCountries($id, $iso2, $iso3, $label, $prefix, $id_currency) {
        if ($id == null) {
            return null;
        }

        DB::table('countries')->insert([
            'id' => $id,
            'iso' => $iso2,
            'iso3' => $iso3,
            'label' => $label,
            'prefix' => $prefix,
            'id_currency' => $id_currency
        ]);
    }

    function run() {

        self::insertCurrency(Country::ARE, '', 'AED', 'UAE Dirham');
        self::insertCurrency(Country::AFG, '؋', 'AFN', 'Afghani');
        self::insertCurrency(Country::ALB, 'Lek', 'ALL', 'Lek');
        self::insertCurrency(Country::ARM, '', 'AMD', 'Armenian Dram');
        self::insertCurrency(Country::ANT, 'ƒ', 'ANG', 'Netherlands Antillian Guilder');
        self::insertCurrency(Country::AGO, '', 'AOA', 'Kwanza');
        self::insertCurrency(Country::ARG, '$', 'ARS', 'Argentine Peso');
        self::insertCurrency(Country::AUS, '$', 'AUD', 'Australian Dollar');
        self::insertCurrency(null, 'ƒ', 'AWG', 'Aruban Guilder');
        self::insertCurrency(null, 'ман', 'AZN', 'Azerbaijanian Manat');
        self::insertCurrency(null, 'KM', 'BAM', 'Convertible Marks');
        self::insertCurrency(null, '$', 'BBD', 'Barbados Dollar');
        self::insertCurrency(null, '', 'BDT', 'Taka');
        self::insertCurrency(null, 'лв', 'BGN', 'Bulgarian Lev');
        self::insertCurrency(null, '', 'BHD', 'Bahraini Dinar');
        self::insertCurrency(null, '', 'BIF', 'Burundi Franc');
        self::insertCurrency(null, '$', 'BMD', 'Bermudian Dollar (customarily known as Bermuda Dollar)');
        self::insertCurrency(null, '$', 'BND', 'Brunei Dollar');
        self::insertCurrency(null, '$b', 'BOB', 'Boliviano Mvdol');
        self::insertCurrency(null, 'R$', 'BRL', 'Brazilian Real');
        self::insertCurrency(null, '$', 'BSD', 'Bahamian Dollar');
        self::insertCurrency(null, 'P', 'BWP', 'Pula');
        self::insertCurrency(null, 'p.', 'BYR', 'Belarussian Ruble');
        self::insertCurrency(null, 'BZ$', 'BZD', 'Belize Dollar');
        self::insertCurrency(null, '$', 'CAD', 'Canadian Dollar');
        self::insertCurrency(null, '', 'CDF', 'Congolese Franc');
        self::insertCurrency(Currency::CHF, 'CHF', 'CHF', 'Swiss Franc');
        self::insertCurrency(null, '$', 'CLP', 'Chilean Peso Unidades de fomento');
        self::insertCurrency(null, '¥', 'CNY', 'Yuan Renminbi');
        self::insertCurrency(null, '$', 'COP', 'Colombian Peso Unidad de Valor Real');
        self::insertCurrency(null, '₡', 'CRC', 'Costa Rican Colon');
        self::insertCurrency(null, '₱', 'CUP', 'Cuban Peso Peso Convertible');
        self::insertCurrency(null, '', 'CVE', 'Cape Verde Escudo');
        self::insertCurrency(null, 'Kč', 'CZK', 'Czech Koruna');
        self::insertCurrency(null, '', 'DJF', 'Djibouti Franc');
        self::insertCurrency(null, 'kr', 'DKK', 'Danish Krone');
        self::insertCurrency(null, 'RD$', 'DOP', 'Dominican Peso');
        self::insertCurrency(null, '', 'DZD', 'Algerian Dinar');
        self::insertCurrency(null, '', 'EEK', 'Kroon');
        self::insertCurrency(null, '£', 'EGP', 'Egyptian Pound');
        self::insertCurrency(null, '', 'ERN', 'Nakfa');
        self::insertCurrency(null, '', 'ETB', 'Ethiopian Birr');
        self::insertCurrency(Country::FRA, '€', 'EUR', 'Euro');
        self::insertCurrency(null, '$', 'FJD', 'Fiji Dollar');
        self::insertCurrency(null, '£', 'FKP', 'Falkland Islands Pound');
        self::insertCurrency(Country::GBR, '£', 'GBP', 'Pound Sterling');
        self::insertCurrency(null, '', 'GEL', 'Lari');
        self::insertCurrency(null, '', 'GHS', 'Cedi');
        self::insertCurrency(null, '£', 'GIP', 'Gibraltar Pound');
        self::insertCurrency(null, '', 'GMD', 'Dalasi');
        self::insertCurrency(null, '', 'GNF', 'Guinea Franc');
        self::insertCurrency(null, 'Q', 'GTQ', 'Quetzal');
        self::insertCurrency(null, '$', 'GYD', 'Guyana Dollar');
        self::insertCurrency(null, '$', 'HKD', 'Hong Kong Dollar');
        self::insertCurrency(null, 'L', 'HNL', 'Lempira');
        self::insertCurrency(null, 'kn', 'HRK', 'Croatian Kuna');
        self::insertCurrency(null, '', 'USD', 'Gourde US Dollar');
        self::insertCurrency(null, 'Ft', 'HUF', 'Forint');
        self::insertCurrency(null, 'Rp', 'IDR', 'Rupiah');
        self::insertCurrency(null, '₪', 'ILS', 'New Israeli Sheqel');
        self::insertCurrency(null, '', 'INR', 'Indian Rupee');
        self::insertCurrency(null, '', 'INR', 'Indian Rupee Ngultrum');
        self::insertCurrency(null, '', 'IQD', 'Iraqi Dinar');
        self::insertCurrency(null, '﷼', 'IRR', 'Iranian Rial');
        self::insertCurrency(null, 'kr', 'ISK', 'Iceland Krona');
        self::insertCurrency(null, 'J$', 'JMD', 'Jamaican Dollar');
        self::insertCurrency(null, '', 'JOD', 'Jordanian Dinar');
        self::insertCurrency(null, '¥', 'JPY', 'Yen');
        self::insertCurrency(null, '', 'KES', 'Kenyan Shilling');
        self::insertCurrency(null, 'лв', 'KGS', 'Som');
        self::insertCurrency(null, '៛', 'KHR', 'Riel');
        self::insertCurrency(null, '', 'KMF', 'Comoro Franc');
        self::insertCurrency(null, '₩', 'KPW', 'North Korean Won');
        self::insertCurrency(null, '₩', 'KRW', 'Won');
        self::insertCurrency(null, '', 'KWD', 'Kuwaiti Dinar');
        self::insertCurrency(null, '$', 'KYD', 'Cayman Islands Dollar');
        self::insertCurrency(null, 'лв', 'KZT', 'Tenge');
        self::insertCurrency(null, '₭', 'LAK', 'Kip');
        self::insertCurrency(null, '£', 'LBP', 'Lebanese Pound');
        self::insertCurrency(null, '₨', 'LKR', 'Sri Lanka Rupee');
        self::insertCurrency(null, '$', 'LRD', 'Liberian Dollar');
        self::insertCurrency(null, 'Lt', 'LTL', 'Lithuanian Litas');
        self::insertCurrency(null, 'Ls', 'LVL', 'Latvian Lats');
        self::insertCurrency(null, '', 'LYD', 'Libyan Dinar');
        self::insertCurrency(null, '', 'MAD', 'Moroccan Dirham');
        self::insertCurrency(null, '', 'MDL', 'Moldovan Leu');
        self::insertCurrency(null, '', 'MGA', 'Malagasy Ariary');
        self::insertCurrency(null, 'ден', 'MKD', 'Denar');
        self::insertCurrency(null, '', 'MMK', 'Kyat');
        self::insertCurrency(null, '₮', 'MNT', 'Tugrik');
        self::insertCurrency(null, '', 'MOP', 'Pataca');
        self::insertCurrency(null, '', 'MRO', 'Ouguiya');
        self::insertCurrency(null, '₨', 'MUR', 'Mauritius Rupee');
        self::insertCurrency(null, '', 'MVR', 'Rufiyaa');
        self::insertCurrency(null, '', 'MWK', 'Kwacha');
        self::insertCurrency(null, '$', 'MXN', 'Mexican Peso Mexican Unidad de Inversion (UDI)');
        self::insertCurrency(null, 'RM', 'MYR', 'Malaysian Ringgit');
        self::insertCurrency(null, 'MT', 'MZN', 'Metical');
        self::insertCurrency(null, '₦', 'NGN', 'Naira');
        self::insertCurrency(null, 'C$', 'NIO', 'Cordoba Oro');
        self::insertCurrency(null, 'kr', 'NOK', 'Norwegian Krone');
        self::insertCurrency(null, '₨', 'NPR', 'Nepalese Rupee');
        self::insertCurrency(null, '$', 'NZD', 'New Zealand Dollar');
        self::insertCurrency(null, '﷼', 'OMR', 'Rial Omani');
        self::insertCurrency(null, 'B/.', 'USD', 'Balboa US Dollar');
        self::insertCurrency(null, 'S/.', 'PEN', 'Nuevo Sol');
        self::insertCurrency(null, '', 'PGK', 'Kina');
        self::insertCurrency(null, 'Php', 'PHP', 'Philippine Peso');
        self::insertCurrency(null, '₨', 'PKR', 'Pakistan Rupee');
        self::insertCurrency(null, 'zł', 'PLN', 'Zloty');
        self::insertCurrency(null, 'Gs', 'PYG', 'Guarani');
        self::insertCurrency(null, '﷼', 'QAR', 'Qatari Rial');
        self::insertCurrency(null, 'lei', 'RON', 'New Leu');
        self::insertCurrency(null, 'Дин.', 'RSD', 'Serbian Dinar');
        self::insertCurrency(Country::RUS, 'руб', 'RUB', 'Russian Ruble');
        self::insertCurrency(null, '', 'RWF', 'Rwanda Franc');
        self::insertCurrency(null, '﷼', 'SAR', 'Saudi Riyal');
        self::insertCurrency(null, '$', 'SBD', 'Solomon Islands Dollar');
        self::insertCurrency(null, '₨', 'SCR', 'Seychelles Rupee');
        self::insertCurrency(null, '', 'SDG', 'Sudanese Pound');
        self::insertCurrency(null, 'kr', 'SEK', 'Swedish Krona');
        self::insertCurrency(null, '$', 'SGD', 'Singapore Dollar');
        self::insertCurrency(null, '£', 'SHP', 'Saint Helena Pound');
        self::insertCurrency(null, '', 'SLL', 'Leone');
        self::insertCurrency(null, 'S', 'SOS', 'Somali Shilling');
        self::insertCurrency(null, '$', 'SRD', 'Surinam Dollar');
        self::insertCurrency(null, '', 'STD', 'Dobra');
        self::insertCurrency(null, '$', 'USD', 'El Salvador Colon US Dollar');
        self::insertCurrency(null, '£', 'SYP', 'Syrian Pound');
        self::insertCurrency(null, '', 'SZL', 'Lilangeni');
        self::insertCurrency(null, '฿', 'THB', 'Baht');
        self::insertCurrency(null, '', 'TJS', 'Somoni');
        self::insertCurrency(null, '', 'TMT', 'Manat');
        self::insertCurrency(null, '', 'TND', 'Tunisian Dinar');
        self::insertCurrency(null, '', 'TOP', 'Pa\'anga');
        self::insertCurrency(null, 'TL', 'TRY', 'Turkish Lira');
        self::insertCurrency(null, 'TT$', 'TTD', 'Trinidad and Tobago Dollar');
        self::insertCurrency(null, 'NT$', 'TWD', 'New Taiwan Dollar');
        self::insertCurrency(null, '', 'TZS', 'Tanzanian Shilling');
        self::insertCurrency(null, '₴', 'UAH', 'Hryvnia');
        self::insertCurrency(null, '', 'UGX', 'Uganda Shilling');
        self::insertCurrency(null, '$', 'USD', 'US Dollar');
        self::insertCurrency(null, '$U', 'UYU', 'Peso Uruguayo Uruguay Peso en Unidades Indexadas');
        self::insertCurrency(null, 'лв', 'UZS', 'Uzbekistan Sum');
        self::insertCurrency(null, 'Bs', 'VEF', 'Bolivar Fuerte');
        self::insertCurrency(null, '₫', 'VND', 'Dong');
        self::insertCurrency(null, '', 'VUV', 'Vatu');
        self::insertCurrency(null, '', 'WST', 'Tala');
        self::insertCurrency(null, '', 'XAF', 'CFA Franc BEAC');
        self::insertCurrency(null, '', 'XAG', 'Silver');
        self::insertCurrency(null, '', 'XAU', 'Gold');
        self::insertCurrency(null, '', 'XBA', 'Bond Markets Units European Composite Unit (EURCO)');
        self::insertCurrency(null, '', 'XBB', 'European Monetary Unit (E.M.U.-6)');
        self::insertCurrency(null, '', 'XBC', 'European Unit of Account 9(E.U.A.-9)');
        self::insertCurrency(null, '', 'XBD', 'European Unit of Account 17(E.U.A.-17)');
        self::insertCurrency(null, '$', 'XCD', 'East Caribbean Dollar');
        self::insertCurrency(null, '', 'XDR', 'SDR');
        self::insertCurrency(null, '', 'XFU', 'UIC-Franc');
        self::insertCurrency(null, '', 'XOF', 'CFA Franc BCEAO');
        self::insertCurrency(null, '', 'XPD', 'Palladium');
        self::insertCurrency(null, '', 'XPF', 'CFP Franc');
        self::insertCurrency(null, '', 'XPT', 'Platinum');
        self::insertCurrency(null, '', 'XTS', 'Codes specifically reserved for testing purposes');
        self::insertCurrency(null, '﷼', 'YER', 'Yemeni Rial');
        self::insertCurrency(null, 'R', 'ZAR', 'Rand');
        self::insertCurrency(Country::ZAF, '', 'ZAR', 'Rand Loti');
        self::insertCurrency(null, '', 'ZAR', 'Rand Namibia Dollar');
        self::insertCurrency(null, '', 'ZMK', 'Zambian Kwacha');
        self::insertCurrency(null, '', 'ZWL', 'Zimbabwe Dollar');
        
        
        self::insertCountries(Country::AFG,'AF','AFG','Afghanistan',93,0);
        self::insertCountries(Country::ALB,'AL','ALB','Albania',355,0);
        self::insertCountries(Country::DZA,'DZ','DZA','Algeria',213,0);
       // self::insertCountries(Country::AND,'AD','AND','Andorra',376,0);
        self::insertCountries(Country::AGO,'AO','AGO','Angola',244,0);
        self::insertCountries(Country::ATG,'AG','ATG','Antigua and Barbuda',-267,0);
        self::insertCountries(Country::ARG,'AR','ARG','Argentina',54,0);
        self::insertCountries(Country::ARM,'AM','ARM','Armenia',374,0);
        self::insertCountries(Country::AUS,'AU','AUS','Australia',61,0);
        self::insertCountries(Country::AUT,'AT','AUT','Austria',43,0);
        self::insertCountries(Country::AZE,'AZ','AZE','Azerbaijan',994,0);
        self::insertCountries(Country::BHS,'BS','BHS','Bahamas, The',-241,0);
        self::insertCountries(Country::BHR,'BH','BHR','Bahrain',973,0);
        self::insertCountries(Country::BGD,'BD','BGD','Bangladesh',880,0);
        self::insertCountries(Country::BRB,'BB','BRB','Barbados',-245,0);
        self::insertCountries(Country::BLR,'BY','BLR','Belarus',375,0);
        self::insertCountries(Country::BEL,'BE','BEL','Belgium',32,0);
        self::insertCountries(Country::BLZ,'BZ','BLZ','Belize',501,0);
        self::insertCountries(Country::BEN,'BJ','BEN','Benin',229,0);
        self::insertCountries(Country::BTN,'BT','BTN','Bhutan',975,0);
        self::insertCountries(Country::BOL,'BO','BOL','Bolivia',591,0);
        self::insertCountries(Country::BIH,'BA','BIH','Bosnia and Herzegovina',387,0);
        self::insertCountries(Country::BWA,'BW','BWA','Botswana',267,0);
        self::insertCountries(Country::BRA,'BR','BRA','Brazil',55,0);
        self::insertCountries(Country::BRN,'BN','BRN','Brunei',673,0);
        self::insertCountries(Country::BGR,'BG','BGR','Bulgaria',359,0);
        self::insertCountries(Country::BFA,'BF','BFA','Burkina Faso',226,0);
        self::insertCountries(Country::BDI,'BI','BDI','Burundi',257,0);
        self::insertCountries(Country::KHM,'KH','KHM','Cambodia',855,0);
        self::insertCountries(Country::CMR,'CM','CMR','Cameroon',237,0);
        self::insertCountries(Country::CAN,'CA','CAN','Canada',1,0);
        self::insertCountries(Country::CPV,'CV','CPV','Cape Verde',238,0);
        self::insertCountries(Country::CAF,'CF','CAF','Central African Republic',236,0);
        self::insertCountries(Country::TCD,'TD','TCD','Chad',235,0);
        self::insertCountries(Country::CHL,'CL','CHL','Chile',56,0);
        self::insertCountries(Country::CHN,'CN','CHN','China',86,0);
        self::insertCountries(Country::COL,'CO','COL','Colombia',57,0);
        self::insertCountries(Country::COM,'KM','COM','Comoros',269,0);
        self::insertCountries(Country::COD,'CD','COD','Congo, (Congo Â– Kinshasa)',243,0);
        self::insertCountries(Country::COG,'CG','COG','Congo, (Congo Â– Brazzaville)',242,0);
        self::insertCountries(Country::CRI,'CR','CRI','Costa Rica',506,0);
        self::insertCountries(Country::CIV,'CI','CIV','Ivory Coast',225,0);
        self::insertCountries(Country::HRV,'HR','HRV','Croatia',385,0);
        self::insertCountries(Country::CUB,'CU','CUB','Cuba',53,0);
        self::insertCountries(Country::CYP,'CY','CYP','Cyprus',357,0);
        self::insertCountries(Country::CZE,'CZ','CZE','Czech Republic',420,0);
        self::insertCountries(Country::DNK,'DK','DNK','Denmark',45,0);
        self::insertCountries(Country::DJI,'DJ','DJI','Djibouti',253,0);
        self::insertCountries(Country::DMA,'DM','DMA','Dominica',-766,0);
        self::insertCountries(Country::DOM,'DO','DOM','Dominican Republic',+1-809 and 1-829,0);
        self::insertCountries(Country::ECU,'EC','ECU','Ecuador',593,0);
        self::insertCountries(Country::EGY,'EG','EGY','Egypt',20,0);
        self::insertCountries(Country::SLV,'SV','SLV','El Salvador',503,0);
        self::insertCountries(Country::GNQ,'GQ','GNQ','Equatorial Guinea',240,0);
        self::insertCountries(Country::ERI,'ER','ERI','Eritrea',291,0);
        self::insertCountries(Country::EST,'EE','EST','Estonia',372,0);
        self::insertCountries(Country::ETH,'ET','ETH','Ethiopia',251,0);
        self::insertCountries(Country::FJI,'FJ','FJI','Fiji',679,0);
        self::insertCountries(Country::FIN,'FI','FIN','Finland',358,0);
        self::insertCountries(Country::FRA,'FR','FRA','France',33,0);
        self::insertCountries(Country::GAB,'GA','GAB','Gabon',241,0);
        self::insertCountries(Country::GMB,'GM','GMB','Gambia, The',220,0);
       // self::insertCountries(Country::GEO,'GE','GEO','Georgia',995,0);
        self::insertCountries(Country::DEU,'DE','DEU','Germany',49,0);
        self::insertCountries(Country::GHA,'GH','GHA','Ghana',233,0);
        self::insertCountries(Country::GRC,'GR','GRC','Greece',30,0);
        self::insertCountries(Country::GRD,'GD','GRD','Grenada',-472,0);
        self::insertCountries(Country::GTM,'GT','GTM','Guatemala',502,0);
        self::insertCountries(Country::GIN,'GN','GIN','Guinea',224,0);
        self::insertCountries(Country::GNB,'GW','GNB','Guinea-Bissau',245,0);
        self::insertCountries(Country::GUY,'GY','GUY','Guyana',592,0);
        self::insertCountries(Country::HTI,'HT','HTI','Haiti',509,0);
        self::insertCountries(Country::HND,'HN','HND','Honduras',504,0);
        self::insertCountries(Country::HUN,'HU','HUN','Hungary',36,0);
        self::insertCountries(Country::ISL,'IS','ISL','Iceland',354,0);
        self::insertCountries(Country::IND,'IN','IND','India',91,0);
        self::insertCountries(Country::IDN,'ID','IDN','Indonesia',62,0);
        self::insertCountries(Country::IRN,'IR','IRN','Iran',98,0);
        self::insertCountries(Country::IRQ,'IQ','IRQ','Iraq',964,0);
        self::insertCountries(Country::IRL,'IE','IRL','Ireland',353,0);
        self::insertCountries(Country::ISR,'IL','ISR','Israel',972,0);
        self::insertCountries(Country::ITA,'IT','ITA','Italy',39,0);
        self::insertCountries(Country::JAM,'JM','JAM','Jamaica',-875,0);
        self::insertCountries(Country::JPN,'JP','JPN','Japan',81,0);
        self::insertCountries(Country::JOR,'JO','JOR','Jordan',962,0);
        self::insertCountries(Country::KAZ,'KZ','KAZ','Kazakhstan',7,0);
        self::insertCountries(Country::KEN,'KE','KEN','Kenya',254,0);
        self::insertCountries(Country::KIR,'KI','KIR','Kiribati',686,0);
        self::insertCountries(Country::PRK,'KP','PRK','Korea, North',850,0);
        self::insertCountries(Country::KOR,'KR','KOR','Korea, South',82,0);
        self::insertCountries(Country::KWT,'KW','KWT','Kuwait',965,0);
        self::insertCountries(Country::KGZ,'KG','KGZ','Kyrgyzstan',996,0);
        self::insertCountries(Country::LAO,'LA','LAO','Laos',856,0);
        self::insertCountries(Country::LVA,'LV','LVA','Latvia',371,0);
        self::insertCountries(Country::LBN,'LB','LBN','Lebanon',961,0);
        self::insertCountries(Country::LSO,'LS','LSO','Lesotho',266,0);
        self::insertCountries(Country::LBR,'LR','LBR','Liberia',231,0);
        self::insertCountries(Country::LBY,'LY','LBY','Libya',218,0);
        self::insertCountries(Country::LIE,'LI','LIE','Liechtenstein',423,0);
        self::insertCountries(Country::LTU,'LT','LTU','Lithuania',370,0);
        self::insertCountries(Country::LUX,'LU','LUX','Luxembourg',352,0);
        self::insertCountries(Country::MKD,'MK','MKD','Macedonia',389,0);
        self::insertCountries(Country::MDG,'MG','MDG','Madagascar',261,0);
        self::insertCountries(Country::MWI,'MW','MWI','Malawi',265,0);
        self::insertCountries(Country::MYS,'MY','MYS','Malaysia',60,0);
        self::insertCountries(Country::MDV,'MV','MDV','Maldives',960,0);
        self::insertCountries(Country::MLI,'ML','MLI','Mali',223,0);
        self::insertCountries(Country::MLT,'MT','MLT','Malta',356,0);
        self::insertCountries(Country::MHL,'MH','MHL','Marshall Islands',692,0);
        self::insertCountries(Country::MRT,'MR','MRT','Mauritania',222,0);
        self::insertCountries(Country::MUS,'MU','MUS','Mauritius',230,0);
        self::insertCountries(Country::MEX,'MX','MEX','Mexico',52,0);
        self::insertCountries(Country::FSM,'FM','FSM','Micronesia',691,0);
        self::insertCountries(Country::MDA,'MD','MDA','Moldova',373,0);
        self::insertCountries(Country::MCO,'MC','MCO','Monaco',377,0);
        self::insertCountries(Country::MNG,'MN','MNG','Mongolia',976,0);
        self::insertCountries(Country::MNE,'ME','MNE','Montenegro',382,0);
        self::insertCountries(Country::MAR,'MA','MAR','Morocco',212,0);
        self::insertCountries(Country::MOZ,'MZ','MOZ','Mozambique',258,0);
        self::insertCountries(Country::MMR,'MM','MMR','Myanmar (Burma)',95,0);
        self::insertCountries(Country::NAM,'NA','NAM','Namibia',264,0);
        self::insertCountries(Country::NRU,'NR','NRU','Nauru',674,0);
        self::insertCountries(Country::NPL,'NP','NPL','Nepal',977,0);
        self::insertCountries(Country::NLD,'NL','NLD','Netherlands',31,0);
        self::insertCountries(Country::NZL,'NZ','NZL','New Zealand',64,0);
        self::insertCountries(Country::NIC,'NI','NIC','Nicaragua',505,0);
        self::insertCountries(Country::NER,'NE','NER','Niger',227,0);
        self::insertCountries(Country::NGA,'NG','NGA','Nigeria',234,0);
        self::insertCountries(Country::NOR,'NO','NOR','Norway',47,0);
        self::insertCountries(Country::OMN,'OM','OMN','Oman',968,0);
        self::insertCountries(Country::PAK,'PK','PAK','Pakistan',92,0);
        self::insertCountries(Country::PLW,'PW','PLW','Palau',680,0);
        self::insertCountries(Country::PAN,'PA','PAN','Panama',507,0);
        self::insertCountries(Country::PNG,'PG','PNG','Papua New Guinea',675,0);
        self::insertCountries(Country::PRY,'PY','PRY','Paraguay',595,0);
        self::insertCountries(Country::PER,'PE','PER','Peru',51,0);
        self::insertCountries(Country::PHL,'PH','PHL','Philippines',63,0);
        self::insertCountries(Country::POL,'PL','POL','Poland',48,0);
        self::insertCountries(Country::PRT,'PT','PRT','Portugal',351,0);
        self::insertCountries(Country::QAT,'QA','QAT','Qatar',974,0);
        self::insertCountries(Country::ROU,'RO','ROU','Romania',40,0);
        self::insertCountries(Country::RUS,'RU','RUS','Russia',7,0);
        self::insertCountries(Country::RWA,'RW','RWA','Rwanda',250,0);
        self::insertCountries(Country::KNA,'KN','KNA','Saint Kitts and Nevis',-868,0);
        self::insertCountries(Country::LCA,'LC','LCA','Saint Lucia',-757,0);
        self::insertCountries(Country::VCT,'VC','VCT','Saint Vincent and the Grenadines',-783,0);
        self::insertCountries(Country::WSM,'WS','WSM','Samoa',685,0);
        self::insertCountries(Country::SMR,'SM','SMR','San Marino',378,0);
        self::insertCountries(Country::STP,'ST','STP','Sao Tome and Principe',239,0);
        self::insertCountries(Country::SAU,'SA','SAU','Saudi Arabia',966,0);
        self::insertCountries(Country::SEN,'SN','SEN','Senegal',221,0);
        self::insertCountries(Country::SRB,'RS','SRB','Serbia',381,0);
        self::insertCountries(Country::SYC,'SC','SYC','Seychelles',248,0);
        self::insertCountries(Country::SLE,'SL','SLE','Sierra Leone',232,0);
        self::insertCountries(Country::SGP,'SG','SGP','Singapore',65,0);
        self::insertCountries(Country::SVK,'SK','SVK','Slovakia',421,0);
        self::insertCountries(Country::SVN,'SI','SVN','Slovenia',386,0);
        self::insertCountries(Country::SLB,'SB','SLB','Solomon Islands',677,0);
        self::insertCountries(Country::SOM,'SO','SOM','Somalia',252,0);
        self::insertCountries(Country::ZAF,'ZA','ZAF','South Africa',27,0);
        self::insertCountries(Country::ESP,'ES','ESP','Spain',34,0);
        self::insertCountries(Country::LKA,'LK','LKA','Sri Lanka',94,0);
        self::insertCountries(Country::SDN,'AL','SDN','Sudan',249,0);
        self::insertCountries(Country::SUR,'SR','SUR','Suriname',597,0);
        self::insertCountries(Country::SWZ,'SZ','SWZ','Swaziland',268,0);
        self::insertCountries(Country::SWE,'SE','SWE','Sweden',46,0);
        self::insertCountries(Country::CHE,'CH','CHE','Switzerland',41,0);
        self::insertCountries(Country::SYR,'SY','SYR','Syria',963,0);
        self::insertCountries(Country::TJK,'TJ','TJK','Tajikistan',992,0);
        self::insertCountries(Country::TZA,'TZ','TZA','Tanzania',255,0);
        self::insertCountries(Country::THA,'TH','THA','Thailand',66,0);
        self::insertCountries(Country::TLS,'TL','TLS','Timor-Leste (East Timor)',670,0);
        self::insertCountries(Country::TGO,'TG','TGO','Togo',228,0);
        self::insertCountries(Country::TON,'TO','TON','Tonga',676,0);
        self::insertCountries(Country::TTO,'TT','TTO','Trinidad and Tobago',-867,0);
        self::insertCountries(Country::TUN,'TN','TUN','Tunisia',216,0);
        self::insertCountries(Country::TUR,'TR','TUR','Turkey',90,0);
        self::insertCountries(Country::TKM,'TM','TKM','Turkmenistan',993,0);
        self::insertCountries(Country::TUV,'TV','TUV','Tuvalu',688,0);
        self::insertCountries(Country::UGA,'UG','UGA','Uganda',256,0);
        self::insertCountries(Country::UKR,'UA','UKR','Ukraine',380,0);
        self::insertCountries(Country::ARE,'AE','ARE','United Arab Emirates',971,0);
        self::insertCountries(Country::GBR,'GB','GBR','United Kingdom',44,0);
        self::insertCountries(Country::USA,'US','USA','United States',1,0);
        self::insertCountries(Country::URY,'UY','URY','Uruguay',598,0);
        self::insertCountries(Country::UZB,'UZ','UZB','Uzbekistan',998,0);
        self::insertCountries(Country::VUT,'VU','VUT','Vanuatu',678,0);
        self::insertCountries(Country::VAT,'VA','VAT','Vatican City',379,0);
        self::insertCountries(Country::VEN,'VE','VEN','Venezuela',58,0);
        self::insertCountries(Country::VNM,'VN','VNM','Vietnam',84,0);
        self::insertCountries(Country::YEM,'YE','YEM','Yemen',967,0);
        self::insertCountries(Country::ZMB,'ZM','ZMB','Zambia',260,0);
        self::insertCountries(Country::ZWE,'ZW','ZWE','Zimbabwe',263,0);
        self::insertCountries(Country::GEO,'GE','GEO','Abkhazia',995,0);
        self::insertCountries(Country::TWN,'TW','TWN','China, Republic of (Taiwan)',886,0);
       // self::insertCountries(Country::AZE,'AZ','AZE','Nagorno-Karabakh',277,0);
        //self::insertCountries(Country::CYP,'CY','CYP','Northern Cyprus',-302,0);
       // self::insertCountries(Country::MDA,'MD','MDA','Pridnestrovie (Transnistria)',-160,0);
        //self::insertCountries(Country::SOM,'SO','SOM','Somaliland',252,0);
       // self::insertCountries(Country::GEO,'GE','GEO','South Ossetia',995,0);
       // self::insertCountries(Country::AUS,'AU','AUS','Ashmore and Cartier Islands',,0);
        self::insertCountries(Country::CXR,'CX','CXR','Christmas Island',61,0);
        self::insertCountries(Country::CCK,'CC','CCK','Cocos (Keeling) Islands',61,0);
        //self::insertCountries(Country::AUS,'AU','AUS','Coral Sea Islands',,0);
        //self::insertCountries(Country::HMD,'HM','HMD','Heard Island and McDonald Islands',,0);
        self::insertCountries(Country::NFK,'NF','NFK','Norfolk Island',672,0);
        self::insertCountries(Country::NCL,'NC','NCL','New Caledonia',687,0);
        self::insertCountries(Country::PYF,'PF','PYF','French Polynesia',689,0);
        self::insertCountries(Country::MYT,'YT','MYT','Mayotte',262,0);
        //self::insertCountries(Country::GLP,'GP','GLP','Saint Barthelemy',590,0);
        //self::insertCountries(Country::GLP,'GP','GLP','Saint Martin',590,0);
        self::insertCountries(Country::SPM,'PM','SPM','Saint Pierre and Miquelon',508,0);
        self::insertCountries(Country::WLF,'WF','WLF','Wallis and Futuna',681,0);
        //self::insertCountries(Country::ATF,'TF','ATF','French Southern and Antarctic Lands',,0);
       // self::insertCountries(Country::PYF,'PF','PYF','Clipperton Island',,0);
       // self::insertCountries(Country::BVT,'BV','BVT','Bouvet Island',,0);
        self::insertCountries(Country::COK,'CK','COK','Cook Islands',682,0);
        self::insertCountries(Country::NIU,'NU','NIU','Niue',683,0);
        self::insertCountries(Country::TKL,'TK','TKL','Tokelau',690,0);
        self::insertCountries(Country::GGY,'GG','GGY','Guernsey',44,0);
        self::insertCountries(Country::IMN,'IM','IMN','Isle of Man',44,0);
        self::insertCountries(Country::JEY,'JE','JEY','Jersey',44,0);
        self::insertCountries(Country::AIA,'AI','AIA','Anguilla',-263,0);
        self::insertCountries(Country::BMU,'BM','BMU','Bermuda',-440,0);
        self::insertCountries(Country::IOT,'IO','IOT','British Indian Ocean Territory',246,0);
        //self::insertCountries(Country::,'','','British Sovereign Base Areas',357,0);
        self::insertCountries(Country::VGB,'VG','VGB','British Virgin Islands',-283,0);
        self::insertCountries(Country::CYM,'KY','CYM','Cayman Islands',-344,0);
        self::insertCountries(Country::FLK,'FK','FLK','Falkland Islands (Islas Malvinas)',500,0);
        self::insertCountries(Country::GIB,'GI','GIB','Gibraltar',350,0);
        self::insertCountries(Country::MSR,'MS','MSR','Montserrat',-663,0);
        //self::insertCountries(Country::PCN,'PN','PCN','Pitcairn Islands',,0);
        self::insertCountries(Country::SHN,'SH','SHN','Saint Helena',290,0);
       // self::insertCountries(Country::SGS,'GS','SGS','South Georgia & South Sandwich Islands',,0);
        self::insertCountries(Country::TCA,'TC','TCA','Turks and Caicos Islands',-648,0);
        self::insertCountries(Country::MNP,'MP','MNP','Northern Mariana Islands',-669,0);
        self::insertCountries(Country::PRI,'PR','PRI','Puerto Rico',+1-787 and 1-939,0);
        self::insertCountries(Country::ASM,'AS','ASM','American Samoa',-683,0);
        //self::insertCountries(Country::UMI,'UM','UMI','Baker Island',,0);
        self::insertCountries(Country::GUM,'GU','GUM','Guam',-670,0);
       // self::insertCountries(Country::UMI,'UM','UMI','Howland Island',,0);
       // self::insertCountries(Country::UMI,'UM','UMI','Jarvis Island',,0);
       // self::insertCountries(Country::UMI,'UM','UMI','Johnston Atoll',,0);
       // self::insertCountries(Country::UMI,'UM','UMI','Kingman Reef',,0);
       // self::insertCountries(Country::UMI,'UM','UMI','Midway Islands',,0);
       // self::insertCountries(Country::UMI,'UM','UMI','Navassa Island',,0);
       // self::insertCountries(Country::UMI,'UM','UMI','Palmyra Atoll',,0);
        self::insertCountries(Country::VIR,'VI','VIR','U.S. Virgin Islands',-339,0);
        //self::insertCountries(Country::UMI,'UM','UMI','Wake Island',,0);
        self::insertCountries(Country::HKG,'HK','HKG','Hong Kong',852,0);
        self::insertCountries(Country::MAC,'MO','MAC','Macau',853,0);
        self::insertCountries(Country::FRO,'FO','FRO','Faroe Islands',298,0);
        self::insertCountries(Country::GRL,'GL','GRL','Greenland',299,0);
        self::insertCountries(Country::GUF,'GF','GUF','French Guiana',594,0);
        self::insertCountries(Country::GLP,'GP','GLP','Guadeloupe',590,0);
        self::insertCountries(Country::MTQ,'MQ','MTQ','Martinique',596,0);
        self::insertCountries(Country::REU,'RE','REU','Reunion',262,0);
        self::insertCountries(Country::ALA,'AX','ALA','Aland',340,0);
        self::insertCountries(Country::ABW,'AW','ABW','Aruba',297,0);
        self::insertCountries(Country::ANT,'AN','ANT','Netherlands Antilles',599,0);
        self::insertCountries(Country::SJM,'SJ','SJM','Svalbard',47,0);
        self::insertCountries(Country::ASC,'AC','ASC','Ascension',247,0);
        self::insertCountries(Country::TAA,'TA','TAA','Tristan da Cunha',290,0);     
    }

}
